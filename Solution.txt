CREATE TABLE teams 
(
       team_id       INT PRIMARY KEY,
       team_name     VARCHAR(50) NOT NULL
);


DROP TABLE IF EXISTS matches;
CREATE TABLE matches 
(
       match_id 	INT PRIMARY KEY,
       host_team 	INT,
       guest_team 	INT,
       host_goals 	INT,
       guest_goals 	INT
);

INSERT INTO teams VALUES(10, 'Liverpool');
INSERT INTO teams VALUES(20, 'Chelsea');
INSERT INTO teams VALUES(30, 'Manchester city');
INSERT INTO teams VALUES(40, 'Manchester united');
INSERT INTO teams VALUES(50, 'Tottenham hotspur');

INSERT INTO matches VALUES(1, 30, 20, 1, 0);
INSERT INTO matches VALUES(2, 10, 20, 1, 2);
INSERT INTO matches VALUES(3, 20, 50, 2, 2);
INSERT INTO matches VALUES(4, 10, 30, 1, 0);
INSERT INTO matches VALUES(5, 30, 50, 0, 1);
------------------------------------------------------------------------------------------------------
#solution
------------------------------------------------------------------------------------------------------

select team_id,team_name,COALESCE(SUM(rankings.total_goals), 0) AS num_points from (
select t1.team_id,t1.team_name,m1.host_team,m1.host_goals,m1.guest_goals,
case when m1.host_goals>m1.guest_goals then 3
     when m1.host_goals=m1.guest_goals then 1 else 0
     end as total_goals
from teams t1 left join matches m1
on t1.team_id=m1.host_team
union all
select t2.team_id,t2.team_name,m2.guest_team,m2.host_goals,m2.guest_goals,
case when m2.guest_goals>m2.host_goals then 3
     when m2.host_goals=m2.guest_goals then 1 else 0
     end as total_goals
from teams t2 left join matches m2
on t2.team_id=m2.guest_team) as rankings 
group by team_id,team_name
order by num_points desc;
